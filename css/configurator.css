*,
*::before,
*::after {
  margin: 0;
  padding: 0;
}

:root {
  --tv-frame-color: #ded9c3;
  --tv-screen-color: #3b3b3b;
  --tv-on-button-color: #61e342;
  --tv-curve: 1rem;
  --remote-curve: 1rem;
  --remote-color: #353439;
  --white: #fff;
  --gutter: 1rem;
  --max-width: 1500px;
  --tv-size: 1rem;
}

@media (min-width: 500px) {
  :root {
    --tv-size: 2rem;
    --gutter: 2rem;
  }
}

@media (min-width: 800px) {
  :root {
    --tv-size: 3rem;
    --gutter: 3rem;
  }
}

nav {
  display: flex;
  justify-content: center;
}

nav svg {
  width: 25vh;
  padding-top: 35px;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

.o-container {
  max-width: var(--max-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--gutter);
  padding-right: var(--gutter);
}

.c-site-content {
  margin: var(--gutter) 0;
}

/***** 
*
*  Configurator
*
*****/

/* TV */

.c-tv {
  margin-bottom: var(--gutter);
}

.c-tv__frame {
  background-color: var(--tv-frame-color);
  padding: var(--tv-size);
  border-radius: var(--tv-curve);
}

.c-tv__screen {
  background-color: var(--tv-screen-color);
  border-radius: var(--tv-curve);
  padding: var(--tv-size);
  margin-bottom: var(--tv-size);
  position: relative;
}

.c-tv__button-group {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
}

.c-tv__button {
  background-color: var(--tv-screen-color);
  color: var(--white);
  padding: 0.5rem 2.5rem;
  border: 0;
  cursor: pointer;
}

.c-tv__button--primary {
  padding-left: 1.75rem;
  padding-right: 1.75rem;
  background-color: var(--tv-on-button-color);
}

/* Remote */
.c-remote {
  max-width: 280px;
  margin-left: auto;
  margin-right: auto;
}

.c-remote__frame {
  background-color: var(--remote-color);
  padding: 1rem;
  border-radius: var(--remote-curve);
}

.c-remote__frame > * + * {
  margin-top: 1rem;
}

.c-remote__button-group {
  display: flex;
  justify-content: space-between;
}

.c-remote__button {
  width: 38px;
  height: 38px;
}

.c-remote__option-title {
  color: var(--white);
  font-family: sans-serif;
  font-weight: normal;
  margin-bottom: 0.25rem;
}

.c-option-list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  list-style: none;
  gap: 0.75rem;
}

.c-color {
  width: 31px;
  height: 31px;
  border-radius: 50%;
  transition: transform ease-in-out 0.3s;
  background-color: var(--color);
  cursor: pointer;
}

.c-color.is-active {
  transform: scale(1.125);
}

.c-sticker-option {
  height: 31px;
  width: 31px;
  cursor: pointer;
  background-color: var(--white);
  border-radius: 50%;
  padding: 0.25rem;
}

.c-option__image--game {
  max-width: none;
  width: 100%;
}

.c-option {
  height: 31px;
  width: 31px;
  border-radius: 50%;
  padding: 0.25rem;
  background-color: var(--white);
}

.c-sticker {
  position: absolute;
  top: 50%;
  left: 50%;
  min-width: 30px;
}

.c-sticker.is-active > .c-sticker__options {
  display: flex;
}

.c-sticker__options {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  pointer-events: none;
  justify-content: center;
  align-items: flex-end;
  gap: 1rem;
  min-width: 160px;
  display: none;
}

.c-sticker__option-icon {
  stroke: #fff;
  cursor: pointer;
  pointer-events: visible;
}

.c-sticker__option-icon--resize {
  cursor: nwse-resize;
}

.c-sticker__option-icon--duplicate {
  cursor: copy;
}

.c-sticker__image {
  display: inline-block;
  vertical-align: middle;
  margin-bottom: 1.8rem;
}

.c-game {
  position: absolute;
}

@media (min-width: 1000px) {
  .c-configurator {
    display: flex;
    gap: var(--gutter);
  }

  .c-tv {
    flex-grow: 1;
    margin-bottom: 0;
  }

  .c-tv__button {
    padding: 0.75rem 2.75rem;
  }

  .c-tv__button--primary {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .c-remote {
    min-width: 280px;
    align-self: flex-end;
  }
}

/* SVG */
.snes {
}

.snes__part {
  cursor: pointer;
}

/* .snes__part:hover {
  fill: red;
} */

.snes__shadow {
  pointer-events: none;
}

.animate-color-in {
  /* TODO: Create animation for adding a feature */
  --diffX: 0;
  --diffY: 0;
  position: absolute;
  animation: animate-color-in_kf 1s ease-in-out;
}

.g-to-color_active {
  fill: blue;
  stroke: rgb(0, 0, 0);
  stroke-width: 1px;

  stroke-dasharray: 2000;
  stroke-dashoffset: 2000;
  animation: dash_kf 1s linear forwards;
}

@keyframes animate-color-in_kf {
  0% {
    transform: translate(0px, 0px);
  }

  100% {
    transform: translate(calc(var(--diffX) * 1px), calc(var(--diffY) * 1px));
  }
}
